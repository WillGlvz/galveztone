/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.ClsConexion;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Will VÃ¡squez
 */
public class frmMayoreo extends javax.swing.JDialog {
    ClsConexion cc = new ClsConexion();
    Connection cn = cc.conectar();
    private PreparedStatement st;
    DefaultTableModel modelo;
    DecimalFormatSymbols simbolos = DecimalFormatSymbols.getInstance(Locale.ENGLISH);
    DecimalFormat df = new DecimalFormat("0.00", simbolos);

    /**
     * Creates new form frmMayoreo
     */
    public frmMayoreo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Gestor de mayoreo");
        getContentPane().setBackground(Color.DARK_GRAY);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtdui = new javax.swing.JTextField();
        txtcodigo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbempleado = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbfecha = new org.freixas.jcalendar.JCalendarCombo();
        jLabel3 = new javax.swing.JLabel();
        txtsalida = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtdevueltos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtentregado = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbrecibido = new javax.swing.JComboBox<>();
        panelCurves2 = new org.edisoncor.gui.panel.PanelCurves();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lbl70 = new javax.swing.JLabel();
        txtcant70 = new javax.swing.JTextField();
        lblmonto70 = new javax.swing.JLabel();
        lbl75 = new javax.swing.JLabel();
        txtcant75 = new javax.swing.JTextField();
        lblmonto75 = new javax.swing.JLabel();
        lblotro = new javax.swing.JLabel();
        txtcantotro = new javax.swing.JTextField();
        lblmontootro = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblfardtotal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblmontototal = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblestado = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtcomision = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtcomentarios = new javax.swing.JTextArea();
        txtpreciootro = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        lblneto = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnguardar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btnconsulta = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnlimpiar = new javax.swing.JButton();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablamayo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setOpaque(false);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Empleado:");

        cmbempleado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbempleadoItemStateChanged(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Fecha:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cantidad de salida:");

        txtsalida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsalidaKeyTyped(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cantidad devueltos:");

        txtdevueltos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdevueltosKeyTyped(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dinero entregado ($):");

        txtentregado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtentregadoFocusLost(evt);
            }
        });
        txtentregado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtentregadoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtentregadoKeyTyped(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Recibido por:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCurves2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbempleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtdevueltos)
                            .addComponent(txtentregado)
                            .addComponent(txtsalida)
                            .addComponent(cmbrecibido, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbempleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtsalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtdevueltos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtentregado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbrecibido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelCurves2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "GestiÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Promociones:");

        lbl70.setForeground(new java.awt.Color(255, 255, 255));
        lbl70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl70.setText("0.70");

        txtcant70.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcant70.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcant70FocusLost(evt);
            }
        });
        txtcant70.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcant70KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcant70KeyTyped(evt);
            }
        });

        lblmonto70.setForeground(new java.awt.Color(255, 255, 255));
        lblmonto70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lbl75.setForeground(new java.awt.Color(255, 255, 255));
        lbl75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl75.setText("0.75");

        txtcant75.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcant75.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcant75FocusLost(evt);
            }
        });
        txtcant75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcant75KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcant75KeyTyped(evt);
            }
        });

        lblmonto75.setForeground(new java.awt.Color(255, 255, 255));
        lblmonto75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblotro.setForeground(new java.awt.Color(255, 255, 255));
        lblotro.setText("Otro:");

        txtcantotro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcantotro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcantotroFocusLost(evt);
            }
        });
        txtcantotro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcantotroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantotroKeyTyped(evt);
            }
        });

        lblmontootro.setForeground(new java.awt.Color(255, 255, 255));
        lblmontootro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Monto total:");

        lblfardtotal.setForeground(new java.awt.Color(255, 255, 255));
        lblfardtotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Fardos totales:");

        lblmontototal.setForeground(new java.awt.Color(255, 255, 255));
        lblmontototal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Estado:");

        lblestado.setForeground(new java.awt.Color(255, 255, 255));
        lblestado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("ComisiÃ³n ($):");

        txtcomision.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcomision.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcomisionFocusLost(evt);
            }
        });
        txtcomision.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcomisionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcomisionKeyTyped(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Comentarios:");

        txtcomentarios.setColumns(20);
        txtcomentarios.setLineWrap(true);
        txtcomentarios.setRows(2);
        txtcomentarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcomentariosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtcomentarios);

        txtpreciootro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtpreciootro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpreciootroFocusLost(evt);
            }
        });
        txtpreciootro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpreciootroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpreciootroKeyTyped(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Neto ($):");

        lblneto.setForeground(new java.awt.Color(255, 255, 255));
        lblneto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(25, 25, 25)
                        .addComponent(lblmontototal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(lblfardtotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblestado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtcomision, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblneto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl75, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                    .addComponent(lbl70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblotro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtpreciootro, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtcant70, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblmonto70, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtcant75, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblmonto75, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtcantotro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblmontootro, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblmonto70, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(lbl70)
                        .addComponent(txtcant70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl75)
                        .addComponent(txtcant75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblmonto75, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblotro, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcantotro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpreciootro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblmontootro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lblmontototal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10))
                    .addComponent(lblfardtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(lblestado, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtcomision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(lblneto, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setOpaque(false);

        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/agregar.png"))); // NOI18N
        btnguardar.setText("Guardar datos");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/edit.png"))); // NOI18N
        btnmodificar.setText("Modificar datos");
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        btnconsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/consultar.png"))); // NOI18N
        btnconsulta.setText("Consultar datos");
        btnconsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaActionPerformed(evt);
            }
        });

        btneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/eliminar.png"))); // NOI18N
        btneliminar.setText("Eliminar datos");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnlimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/limpiar.png"))); // NOI18N
        btnlimpiar.setText("Limpiar datos");
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnconsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(btneliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnlimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelCurves1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnguardar)
                .addGap(18, 18, 18)
                .addComponent(btnmodificar)
                .addGap(18, 18, 18)
                .addComponent(btnconsulta)
                .addGap(18, 18, 18)
                .addComponent(btneliminar)
                .addGap(18, 18, 18)
                .addComponent(btnlimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelCurves1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tablamayo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablamayo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablamayo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablamayoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablamayo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcant70KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcant70KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) || txtcant70.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtcant70KeyTyped

    private void txtcant75KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcant75KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) || txtcant75.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtcant75KeyTyped

    private void txtcantotroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantotroKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) || txtcantotro.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtcantotroKeyTyped

    private void txtcant70KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcant70KeyReleased
        if(txtcant70.getText().isEmpty()){
            lblmonto70.setText("0");
            txtcomision.setText("0.0");
        }else{
            double monto70 = Double.parseDouble(lbl70.getText()) * Integer.parseInt(txtcant70.getText());
            lblmonto70.setText((df.format(monto70)));
            double montototal = monto70 + Double.parseDouble(lblmonto75.getText()) + Double.parseDouble(lblmontootro.getText());
            lblmontototal.setText(String.valueOf(df.format(montototal)));
            int cantotal = Integer.parseInt(txtcant70.getText()) + Integer.parseInt(txtcant75.getText()) + Integer.parseInt(txtcantotro.getText());
            lblfardtotal.setText(String.valueOf(cantotal));
            double com70 = Double.parseDouble(txtcant70.getText()) * 0.05;
            double com75 = Double.parseDouble(txtcant75.getText()) * 0.06;
            double comision = com70 + com75;
            txtcomision.setText(String.valueOf(df.format(comision)));
            if(txtentregado.getText().isEmpty() || txtcomision.getText().isEmpty()){
                lblneto.setText("0");
            }else{
                double neto = Double.parseDouble(txtentregado.getText()) - comision;
                lblneto.setText(String.valueOf(df.format(neto)));
            }
            if(txtentregado.getText().isEmpty()){}else{
                if(Double.parseDouble(txtentregado.getText()) == montototal){
                    lblestado.setText("Todo en orden");
                }else{
                    lblestado.setText("Error");
                }
            }
        }
    }//GEN-LAST:event_txtcant70KeyReleased

    private void txtcant75KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcant75KeyReleased
        if(txtcant75.getText().isEmpty()){
            lblmonto75.setText("0");
            txtcomision.setText("0.0");
        }else{
            double monto75 = Double.parseDouble(lbl75.getText()) * Integer.parseInt(txtcant75.getText());
            lblmonto75.setText(String.valueOf(df.format(monto75)));
            double montototal = Double.parseDouble(lblmonto70.getText()) + Double.parseDouble(lblmonto75.getText()) + Double.parseDouble(lblmontootro.getText());
            lblmontototal.setText(String.valueOf(df.format(montototal)));
            int cantotal = Integer.parseInt(txtcant70.getText()) + Integer.parseInt(txtcant75.getText()) + Integer.parseInt(txtcantotro.getText());
            lblfardtotal.setText(String.valueOf(cantotal));
            double com70 = Double.parseDouble(txtcant70.getText()) * 0.05;
            double com75 = Double.parseDouble(txtcant75.getText()) * 0.06;
            double comision = com70 + com75;
            txtcomision.setText(String.valueOf(df.format(comision)));
            if(txtentregado.getText().isEmpty() || txtcomision.getText().isEmpty()){
                lblneto.setText("0");
            }else{
                double neto = Double.parseDouble(txtentregado.getText()) - Double.parseDouble(txtcomision.getText());
                lblneto.setText(String.valueOf(df.format(neto)));
            }
            if(txtentregado.getText().isEmpty()){}else{
                if(Double.parseDouble(txtentregado.getText()) == Double.parseDouble(lblmontototal.getText())){
                    lblestado.setText("Todo en orden");
                }else{
                    lblestado.setText("Error");
                }
            }
        }
    }//GEN-LAST:event_txtcant75KeyReleased

    private void txtcantotroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantotroKeyReleased
        if(txtcantotro.getText().isEmpty() || txtpreciootro.getText().isEmpty()){
            lblmontootro.setText("0");
        }else{
            double montotro = Double.parseDouble(txtpreciootro.getText()) * Integer.parseInt(txtcantotro.getText());
            lblmontootro.setText(String.valueOf(df.format(montotro)));
            double montototal = Double.parseDouble(lblmonto70.getText()) + Double.parseDouble(lblmonto75.getText()) + Double.parseDouble(lblmontootro.getText());
            lblmontototal.setText(String.valueOf(df.format(montototal)));
            int cantotal = Integer.parseInt(txtcant70.getText()) + Integer.parseInt(txtcant75.getText()) + Integer.parseInt(txtcantotro.getText());
            lblfardtotal.setText(String.valueOf(cantotal));
            if(txtentregado.getText().isEmpty()){}else{
                if(Double.parseDouble(txtentregado.getText()) == Double.parseDouble(lblmontototal.getText())){
                    lblestado.setText("Todo en orden");
                }else{
                    lblestado.setText("Error");
                }
            }
        }
    }//GEN-LAST:event_txtcantotroKeyReleased

    private void txtpreciootroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpreciootroKeyReleased
        if(txtcantotro.getText().isEmpty() || txtpreciootro.getText().isEmpty()){
            lblmontootro.setText("0");
        }else{
            double montotro = Double.parseDouble(txtpreciootro.getText()) * Integer.parseInt(txtcantotro.getText());
            lblmontootro.setText(String.valueOf(df.format(montotro)));
        }
    }//GEN-LAST:event_txtpreciootroKeyReleased

    private void txtpreciootroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpreciootroFocusLost
        if (txtpreciootro.getText().isEmpty()) {
            txtpreciootro.setText("0.0");
        } else {
            String precio = df.format(Double.parseDouble(txtpreciootro.getText()));
            precio = precio.replaceAll(",", ".");
            try {
                txtpreciootro.setText(precio);
            } catch (NumberFormatException e) {
                txtpreciootro.setText(null);
            }
        }
    }//GEN-LAST:event_txtpreciootroFocusLost

    private void txtpreciootroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpreciootroKeyTyped
        try {
            if (!Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == '.') || txtpreciootro.getText().length() >= 5) {
                evt.consume();
            }
            Double.parseDouble(txtpreciootro.getText() + evt.getKeyChar());
        } catch (NumberFormatException e) {
            evt.consume();
        }
    }//GEN-LAST:event_txtpreciootroKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        CargarAdmin();
        CargarEmpleados();
        bloquear();
        cmbempleado.setSelectedIndex(-1);
    }//GEN-LAST:event_formWindowOpened

    private void cmbempleadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbempleadoItemStateChanged
        if(cmbempleado.getSelectedIndex() > -1){
            cmbfecha.setEnabled(true);
            txtsalida.setEnabled(true);
            txtdevueltos.setEnabled(true);
            txtentregado.setEnabled(true);
            cmbrecibido.setEnabled(true);
            txtcant70.setEnabled(true);
            txtcant75.setEnabled(true);
            txtcantotro.setEnabled(true);
            txtpreciootro.setEnabled(true);
            txtcomentarios.setEnabled(true);
            txtcomision.setEnabled(true);
            limpiar2();
            tablamayo.setModel(new DefaultTableModel());
            try {
                st = cn.prepareStatement("SELECT id_emp FROM empleados WHERE nom_emp = ?");
                st.setString(1, cmbempleado.getSelectedItem().toString());
                ResultSet rs2 = st.executeQuery();
                rs2.next();
                int admin2 = rs2.getInt(1);
                txtdui.setText(String.valueOf(admin2));
            } catch (Exception e) { 
                JOptionPane.showMessageDialog(this, "ERROR: " + e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_cmbempleadoItemStateChanged

    private void txtcant70FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcant70FocusLost
        if(txtcant70.getText().isEmpty()){
            txtcant70.setText("0");
        }
    }//GEN-LAST:event_txtcant70FocusLost

    private void txtcant75FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcant75FocusLost
        if(txtcant75.getText().isEmpty()){
            txtcant75.setText("0");
        }
    }//GEN-LAST:event_txtcant75FocusLost

    private void txtcantotroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcantotroFocusLost
        if(txtcantotro.getText().isEmpty()){
            txtcantotro.setText("0");
        }
    }//GEN-LAST:event_txtcantotroFocusLost

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        bloquear();
        tablamayo.setModel(new DefaultTableModel());
        limpiar();
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void txtsalidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsalidaKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) || txtsalida.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtsalidaKeyTyped

    private void txtdevueltosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdevueltosKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) || txtdevueltos.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtdevueltosKeyTyped

    private void txtentregadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtentregadoKeyTyped
        try {
            if (!Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == '.') || txtentregado.getText().length() >= 7) {
                evt.consume();
            }
            Double.parseDouble(txtentregado.getText() + evt.getKeyChar());
        } catch (NumberFormatException e) {
            evt.consume();
        }
    }//GEN-LAST:event_txtentregadoKeyTyped

    private void txtentregadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtentregadoFocusLost
        if (txtentregado.getText().isEmpty()) {
        } else {
            String precio = df.format(Double.parseDouble(txtentregado.getText()));
            precio = precio.replaceAll(",", ".");
            try {
                txtentregado.setText(precio);
            } catch (NumberFormatException e) {
                txtentregado.setText(null);
            }
        }
    }//GEN-LAST:event_txtentregadoFocusLost

    private void txtcomisionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcomisionKeyTyped
        try {
            if (!Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == '.') || txtcomision.getText().length() >= 7) {
                evt.consume();
            }
            Double.parseDouble(txtcomision.getText() + evt.getKeyChar());
        } catch (NumberFormatException e) {
            evt.consume();
        }
    }//GEN-LAST:event_txtcomisionKeyTyped

    private void txtcomisionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcomisionFocusLost
        if (txtcomision.getText().isEmpty()) {
            txtcomision.setText("0");
        } else {
            String precio = df.format(Double.parseDouble(txtcomision.getText()));
            precio = precio.replaceAll(",", ".");
            try {
                txtcomision.setText(precio);
            } catch (NumberFormatException e) {
                txtcomision.setText(null);
            }
        }
    }//GEN-LAST:event_txtcomisionFocusLost

    private void txtentregadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtentregadoKeyReleased
        if(txtentregado.getText().isEmpty() || txtcomision.getText().isEmpty()){
            lblneto.setText("0");
        }else{
            double neto = Double.parseDouble(txtentregado.getText()) - Double.parseDouble(txtcomision.getText());
            lblneto.setText(String.valueOf(df.format(neto)));
        }
        if(txtentregado.getText().isEmpty()){}else{
            if(Double.parseDouble(txtentregado.getText()) == Double.parseDouble(lblmontototal.getText())){
                lblestado.setText("Todo en orden");
            }else{
                lblestado.setText("Error");
            }
        }
    }//GEN-LAST:event_txtentregadoKeyReleased

    private void txtcomisionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcomisionKeyReleased
        if(txtentregado.getText().isEmpty() || txtcomision.getText().isEmpty()){
            lblneto.setText("0");
        }else{
            double neto = Double.parseDouble(txtentregado.getText()) - Double.parseDouble(txtcomision.getText());
            lblneto.setText(String.valueOf(df.format(neto)));
        }
    }//GEN-LAST:event_txtcomisionKeyReleased

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        if (cmbempleado.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Â¡Debes seleccionar un empleado!", "AVISO", JOptionPane.CANCEL_OPTION);
        } else if (cmbrecibido.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Â¿QuiÃ©n ha recibido la venta?", "AVISO", JOptionPane.CANCEL_OPTION);
        }else if(txtsalida.getText().isEmpty() || txtdevueltos.getText().isEmpty() || txtentregado.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Â¡No puedes dejar campos en blanco!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else if(lblestado.getText().equals("Error")){
            JOptionPane.showMessageDialog(this, "Â¡Ha ingreso datos incoherentes!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else{
            try {
                st = cn.prepareStatement("SELECT id_emp FROM empleados WHERE nom_emp = ?");
                st.setString(1, cmbempleado.getSelectedItem().toString());
                ResultSet rs = st.executeQuery();
                if (rs.next()) {
                    String empleado = rs.getString(1);
                    st = cn.prepareStatement("SELECT id_admin FROM administradores WHERE nom_admin = ?");
                    st.setString(1, cmbrecibido.getSelectedItem().toString());
                    ResultSet rs2 = st.executeQuery();
                    if (rs2.next()) {
                        String admin = rs2.getString(1);
                        if (txtcomentarios.getText().isEmpty()) {
                            st = cn.prepareStatement("SELECT fecha_mayoreo FROM mayoristas r INNER JOIN empleados e ON r.id_emp=e.id_emp WHERE fecha_mayoreo = ? AND e.nom_emp = ?");
                            java.sql.Date FechaAct = new java.sql.Date(cmbfecha.getDate().getTime());
                            st.setDate(1, FechaAct);
                            st.setString(2, cmbempleado.getSelectedItem().toString());
                            ResultSet rs3 = st.executeQuery();
                            if (rs3.next()) {
                                JOptionPane.showMessageDialog(this, "Ya existe un registro con la fecha que ha seleccionado", "AtenciÃ³n", JOptionPane.CANCEL_OPTION);
                            }else{
                                st = cn.prepareStatement("INSERT INTO mayoristas(fecha_mayoreo, salida_fardos_may, "
                                        + "dev_fardos_may, monto3_may, cant1_may, cant2_may, cant3_may, "
                                        + "monto_venta1_may, monto_venta2_may, monto_venta3_may, total_venta_may, "
                                        + "total_fardos_may, entregado_mayo, ganancia_vend_may, saldo_neto_may, "
                                        + "coment_mayo, id_admin, id_emp) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                java.sql.Date sqlFecha = new java.sql.Date(cmbfecha.getDate().getTime());
                                st.setDate(1, sqlFecha);
                                st.setInt(2, Integer.parseInt(txtsalida.getText()));
                                st.setInt(3, Integer.parseInt(txtdevueltos.getText()));
                                st.setDouble(4, Double.parseDouble(txtpreciootro.getText()));
                                st.setInt(5, Integer.parseInt(txtcant70.getText()));
                                st.setInt(6, Integer.parseInt(txtcant75.getText()));
                                st.setInt(7, Integer.parseInt(txtcantotro.getText()));
                                st.setDouble(8, Double.parseDouble(lblmonto70.getText()));
                                st.setDouble(9, Double.parseDouble(lblmonto75.getText()));
                                st.setDouble(10, Double.parseDouble(lblmontootro.getText()));
                                st.setDouble(11, Double.parseDouble(lblmontototal.getText()));
                                st.setInt(12, Integer.parseInt(lblfardtotal.getText()));
                                st.setDouble(13, Double.parseDouble(txtentregado.getText()));
                                st.setDouble(14, Double.parseDouble(txtcomision.getText()));
                                st.setDouble(15, Double.parseDouble(lblneto.getText()));
                                st.setString(16, "No hay comentarios.");
                                st.setInt(17, Integer.parseInt(admin));
                                st.setInt(18, Integer.parseInt(empleado));
                                st.executeUpdate();
                                JOptionPane.showMessageDialog(rootPane, "Datos guardados con Ã©xito");
                                bloquear();
                                MostrarDatos(Integer.parseInt(txtdui.getText()));
                                limpiar();
                                tablamayo.setModel(new DefaultTableModel());
                            }
                        }else{
                            st = cn.prepareStatement("SELECT fecha_mayoreo FROM mayoristas r INNER JOIN empleados e ON r.id_emp=e.id_emp WHERE fecha_mayoreo = ? AND e.nom_emp = ?");
                            java.sql.Date FechaAct = new java.sql.Date(cmbfecha.getDate().getTime());
                            st.setDate(1, FechaAct);
                            st.setString(2, cmbempleado.getSelectedItem().toString());
                            ResultSet rs3 = st.executeQuery();
                            if (rs3.next()) {
                                JOptionPane.showMessageDialog(this, "Ya existe un registro con la fecha que ha seleccionado", "AtenciÃ³n", JOptionPane.CANCEL_OPTION);
                            }else{
                                st = cn.prepareStatement("INSERT INTO mayoristas(fecha_mayoreo, salida_fardos_may, "
                                        + "dev_fardos_may, monto3_may, cant1_may, cant2_may, cant3_may, "
                                        + "monto_venta1_may, monto_venta2_may, monto_venta3_may, total_venta_may, "
                                        + "total_fardos_may, entregado_mayo, ganancia_vend_may, saldo_neto_may, "
                                        + "coment_mayo, id_admin, id_emp) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                java.sql.Date sqlFecha = new java.sql.Date(cmbfecha.getDate().getTime());
                                st.setDate(1, sqlFecha);
                                st.setInt(2, Integer.parseInt(txtsalida.getText()));
                                st.setInt(3, Integer.parseInt(txtdevueltos.getText()));
                                st.setDouble(4, Double.parseDouble(txtpreciootro.getText()));
                                st.setInt(5, Integer.parseInt(txtcant70.getText()));
                                st.setInt(6, Integer.parseInt(txtcant75.getText()));
                                st.setInt(7, Integer.parseInt(txtcantotro.getText()));
                                st.setDouble(8, Double.parseDouble(lblmonto70.getText()));
                                st.setDouble(9, Double.parseDouble(lblmonto75.getText()));
                                st.setDouble(10, Double.parseDouble(lblmontootro.getText()));
                                st.setDouble(11, Double.parseDouble(lblmontototal.getText()));
                                st.setInt(12, Integer.parseInt(lblfardtotal.getText()));
                                st.setDouble(13, Double.parseDouble(txtentregado.getText()));
                                st.setDouble(14, Double.parseDouble(txtcomision.getText()));
                                st.setDouble(15, Double.parseDouble(lblneto.getText()));
                                st.setString(16, txtcomentarios.getText());
                                st.setInt(17, Integer.parseInt(admin));
                                st.setInt(18, Integer.parseInt(empleado));
                                st.executeUpdate();
                                JOptionPane.showMessageDialog(rootPane, "Datos guardados con Ã©xito");
                                bloquear();
                                MostrarDatos(Integer.parseInt(txtdui.getText()));
                                limpiar();
                                tablamayo.setModel(new DefaultTableModel());
                            }
                        }
                    }
                }
            } catch (SQLException | NumberFormatException | HeadlessException e) {JOptionPane.showMessageDialog(this, "ERROR: " + e, "Error", JOptionPane.ERROR_MESSAGE);}
        }
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnconsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaActionPerformed
        if (cmbempleado.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un empleado para realizar la consulta", "AVISO", JOptionPane.CANCEL_OPTION);
        } else {
            MostrarDatos(Integer.parseInt(txtdui.getText()));
        }
    }//GEN-LAST:event_btnconsultaActionPerformed

    private void tablamayoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamayoMouseClicked
        try {
            txtcodigo.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 0).toString());
            SimpleDateFormat Formateador = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date fecha = Formateador.parse(tablamayo.getValueAt(tablamayo.getSelectedRow(), 1).toString());
            cmbfecha.setSelectedIndex(-1);
            cmbfecha.setDate(fecha);
            txtsalida.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 2).toString());
            txtdevueltos.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 3).toString());
            txtentregado.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 13).toString());
            cmbrecibido.setSelectedItem(tablamayo.getValueAt(tablamayo.getSelectedRow(), 16));
            txtcant70.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 4).toString());
            lblmonto70.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 5).toString());
            txtcant75.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 6).toString());
            lblmonto75.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 7).toString());
            txtpreciootro.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 8).toString());
            txtcantotro.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 9).toString());
            lblmontootro.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 10).toString());
            lblfardtotal.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 11).toString());
            lblmontototal.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 12).toString());
            txtcomision.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 14).toString());
            lblneto.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 15).toString());
            txtcomentarios.setText(tablamayo.getValueAt(tablamayo.getSelectedRow(), 17).toString());
        } catch (Exception e) {Logger.getLogger(frmMayoreo.class.getName()).log(Level.SEVERE, null, e);}
    }//GEN-LAST:event_tablamayoMouseClicked

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        if("".equals(txtcodigo.getText())){
            JOptionPane.showMessageDialog(this, "Â¡No puedes dejar campos en blanco!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else if(cmbempleado.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(this, "Â¡Debes seleccionar un empleado!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else if(txtsalida.getText().isEmpty() || txtdevueltos.getText().isEmpty() || txtentregado.getText().isEmpty() || txtcomentarios.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Â¡No puedes dejar campos en blanco!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else if(cmbrecibido.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(this, "Â¡Debes seleccionar quiÃ©n lo recibiÃ³!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else if(lblestado.getText().equals("Error")){
            JOptionPane.showMessageDialog(this, "Â¡Ha ingreso datos incoherentes!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else{
            try {
               st = cn.prepareStatement("SELECT id_emp FROM empleados WHERE nom_emp = ?");
                st.setString(1, cmbempleado.getSelectedItem().toString());
                ResultSet rs = st.executeQuery();
                if (rs.next()) {
                    String empleado = rs.getString(1);
                    st = cn.prepareStatement("SELECT id_admin FROM administradores WHERE nom_admin = ?");
                    st.setString(1, cmbrecibido.getSelectedItem().toString());
                    ResultSet rs2 = st.executeQuery();
                    if (rs2.next()) {
                        String admin = rs2.getString(1);
                        st = cn.prepareStatement("SELECT fecha_mayoreo FROM mayoristas r INNER JOIN empleados e ON r.id_emp=e.id_emp WHERE fecha_mayoreo = ? AND e.nom_emp = ? AND !(id_mayoreo = ?)");
                        java.sql.Date FechaAct = new java.sql.Date(cmbfecha.getDate().getTime());
                        st.setDate(1, FechaAct);
                        st.setString(2, cmbempleado.getSelectedItem().toString());
                        st.setInt(3, Integer.parseInt(txtcodigo.getText()));
                        ResultSet rs3 = st.executeQuery();
                        if (rs3.next()) {
                            JOptionPane.showMessageDialog(this, "Ya existe un registro con la fecha que ha seleccionado", "AtenciÃ³n", JOptionPane.CANCEL_OPTION);
                        }else{
                            st = cn.prepareStatement("UPDATE mayoristas SET fecha_mayoreo = ?, salida_fardos_may = ?, "
                                + "dev_fardos_may = ?, monto3_may = ?, cant1_may = ?, cant2_may = ?, cant3_may = ?, "
                                + "monto_venta1_may = ?, monto_venta2_may = ?, monto_venta3_may = ?, total_venta_may = ?, "
                                + "total_fardos_may = ?, entregado_mayo = ?, ganancia_vend_may = ?, saldo_neto_may = ?, "
                                + "coment_mayo = ?, id_admin = ?, id_emp = ? WHERE id_mayoreo = ?");
                            java.sql.Date sqlFecha = new java.sql.Date(cmbfecha.getDate().getTime());
                            st.setDate(1, sqlFecha);
                            st.setInt(2, Integer.parseInt(txtsalida.getText()));
                            st.setInt(3, Integer.parseInt(txtdevueltos.getText()));
                            st.setDouble(4, Double.parseDouble(txtpreciootro.getText()));
                            st.setInt(5, Integer.parseInt(txtcant70.getText()));
                            st.setInt(6, Integer.parseInt(txtcant75.getText()));
                            st.setInt(7, Integer.parseInt(txtcantotro.getText()));
                            st.setDouble(8, Double.parseDouble(lblmonto70.getText()));
                            st.setDouble(9, Double.parseDouble(lblmonto75.getText()));
                            st.setDouble(10, Double.parseDouble(lblmontootro.getText()));
                            st.setDouble(11, Double.parseDouble(lblmontototal.getText()));
                            st.setInt(12, Integer.parseInt(lblfardtotal.getText()));
                            st.setDouble(13, Double.parseDouble(txtentregado.getText()));
                            st.setDouble(14, Double.parseDouble(txtcomision.getText()));
                            st.setDouble(15, Double.parseDouble(lblneto.getText()));
                            st.setString(16, txtcomentarios.getText());
                            st.setInt(17, Integer.parseInt(admin));
                            st.setInt(18, Integer.parseInt(empleado));
                            st.setInt(19, Integer.parseInt(txtcodigo.getText()));
                            st.executeUpdate();
                            JOptionPane.showMessageDialog(rootPane, "Datos modificados con Ã©xito");
                            MostrarDatos(Integer.parseInt(txtdui.getText()));
                            bloquear();
                            limpiar2();
                        }
                    }
                }
            } catch (SQLException | NumberFormatException e) {Logger.getLogger(frmMayoreo.class.getName()).log(Level.SEVERE, null, e);}
        }
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        if("".equals(txtcodigo.getText())){
            JOptionPane.showMessageDialog(this, "Â¡Debes realizar y seleccionar una consulta para eliminar!", "AVISO", JOptionPane.CANCEL_OPTION);
        }else{
            try {
                st = cn.prepareStatement("DELETE FROM mayoristas WHERE id_mayoreo = ?");
                st.setInt(1, Integer.parseInt(txtcodigo.getText()));
                if(JOptionPane.showConfirmDialog(rootPane, "Â¿Esta seguro que desea eliminar estos datos?" + "\nÂ¡Ya no podrÃ¡n ser recuperados!", "ConfirmaciÃ³n", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                    st.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Datos eliminados con Ã©xito");
                    MostrarDatos(Integer.parseInt(txtdui.getText()));
                    bloquear();
                    limpiar2();
                    cmbempleado.setSelectedIndex(-1);
                }
            } catch (SQLException | NumberFormatException | HeadlessException e) {JOptionPane.showMessageDialog(this, "ERROR: " + e, "Error", JOptionPane.ERROR_MESSAGE);}
        }
    }//GEN-LAST:event_btneliminarActionPerformed

    private void txtcomentariosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcomentariosKeyTyped
        if (txtcomentarios.getText().length() >= 195) {
            evt.consume();
        }
    }//GEN-LAST:event_txtcomentariosKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (JOptionPane.showConfirmDialog(null, "ATENCIÃN" + "\nLe recomendamos que verifique si ha ingresado correctamente los datos de este dÃ­a" + "\nDicho esto, Â¿Desea cerrar la ventana?", "AVISO", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            dispose();
        }else{
            dispose();
            frmMayoreo obj = new frmMayoreo(null, true);
            obj.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    public void bloquear(){
        cmbfecha.setEnabled(false);
        txtsalida.setEnabled(false);
        txtdevueltos.setEnabled(false);
        txtentregado.setEnabled(false);
        cmbrecibido.setEnabled(false);
        txtcant70.setEnabled(false);
        txtcant75.setEnabled(false);
        txtcantotro.setEnabled(false);
        txtpreciootro.setEnabled(false);
        txtcomentarios.setEnabled(false);
        txtcomision.setEnabled(false);
        txtcant70.setText("0");
        txtcant75.setText("0");
        lblneto.setText("0");
        txtcantotro.setText("0");
        txtpreciootro.setText("0.0");
        txtcomision.setText("0");
        lblfardtotal.setText("0");
        lblmonto70.setText("0");
        lblmonto75.setText("0");
        lblmontootro.setText("0");
        lblmontototal.setText("0");
        lblestado.setText("");
        cmbrecibido.setSelectedIndex(-1);
    }
    
    public void limpiar(){
        cmbempleado.setSelectedIndex(-1);
        txtsalida.setText("");
        txtdevueltos.setText("");
        txtentregado.setText("");
        txtcomentarios.setText("");
        txtcodigo.setText("");
    }
    
    public void limpiar2(){
        txtsalida.setText("");
        txtdevueltos.setText("");
        txtentregado.setText("");
        txtcomentarios.setText("");
        txtcant70.setText("0");
        txtcant75.setText("0");
        lblneto.setText("0");
        txtcantotro.setText("0");
        txtpreciootro.setText("0.0");
        txtcomision.setText("0");
        lblfardtotal.setText("0");
        lblmonto70.setText("0");
        lblmonto75.setText("0");
        lblmontootro.setText("0");
        lblmontototal.setText("0");
        lblestado.setText("");
        cmbrecibido.setSelectedIndex(-1);
    }
    
    public void CargarEmpleados() {
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT nom_emp FROM empleados ORDER BY nom_emp");
            cmbempleado.removeAllItems();
            while (rs.next()) {
                cmbempleado.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ERROR: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CargarAdmin() {
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT nom_admin FROM administradores ORDER BY nom_admin");
            cmbrecibido.removeAllItems();
            while (rs.next()) {
                cmbrecibido.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ERROR: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void MostrarDatos(int dui){
        modelo= new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        modelo.addColumn("CÃ³digo");
        modelo.addColumn("Fecha");
        modelo.addColumn("Salida");
        modelo.addColumn("Devueltos");
        modelo.addColumn("Fardos a 0.70");
        modelo.addColumn("Monto por 0.70");
        modelo.addColumn("Fardos a 0.75");
        modelo.addColumn("Monto por 0.75");
        modelo.addColumn("Otro precio");
        modelo.addColumn("Fardos a otro precio");
        modelo.addColumn("Monto por otro precio");
        modelo.addColumn("Fardos vendidos");
        modelo.addColumn("Monto total");
        modelo.addColumn("EntregÃ³");
        modelo.addColumn("ComisiÃ³n");
        modelo.addColumn("Saldo neto");
        modelo.addColumn("Recibido por");
        modelo.addColumn("Comentarios");
        tablamayo.setModel(modelo);
        String sql = "SELECT id_mayoreo, fecha_mayoreo, salida_fardos_may, dev_fardos_may, cant1_may, monto_venta1_may, cant2_may, monto_venta2_may, monto3_may, cant3_may, monto_venta3_may, total_fardos_may, total_venta_may, entregado_mayo, ganancia_vend_may, saldo_neto_may, nom_admin, coment_mayo FROM mayoristas m INNER JOIN empleados e INNER JOIN administradores a ON m.id_emp=e.id_emp AND m.id_admin=a.id_admin WHERE e.id_emp = " + dui + " ORDER BY fecha_mayoreo ASC";
        String []datos = new String [18];
        try {
            Statement st2 = cn.createStatement();
            ResultSet rs = st2.executeQuery(sql);
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=rs.getString(10);
                datos[10]=rs.getString(11);
                datos[11]=rs.getString(12);
                datos[12]=rs.getString(13);
                datos[13]=rs.getString(14);
                datos[14]=rs.getString(15);
                datos[15]=rs.getString(16);
                datos[16]=rs.getString(17);
                datos[17]=rs.getString(18);
                modelo.addRow(datos);
            }
            tablamayo.setModel(modelo);
            tablamayo.getTableHeader().setReorderingAllowed(false);
            TableColumnModel columnModel = tablamayo.getColumnModel();
            for (int i = 0; i < columnModel.getColumnCount(); i++) {
                columnModel.getColumn(i).setPreferredWidth(120);
            }
        } catch (SQLException ex) {JOptionPane.showMessageDialog(this, "ERROR: " + ex, "Error", JOptionPane.ERROR_MESSAGE);}
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMayoreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMayoreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMayoreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMayoreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmMayoreo dialog = new frmMayoreo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconsulta;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JComboBox<String> cmbempleado;
    private org.freixas.jcalendar.JCalendarCombo cmbfecha;
    private javax.swing.JComboBox<String> cmbrecibido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl70;
    private javax.swing.JLabel lbl75;
    private javax.swing.JLabel lblestado;
    private javax.swing.JLabel lblfardtotal;
    private javax.swing.JLabel lblmonto70;
    private javax.swing.JLabel lblmonto75;
    private javax.swing.JLabel lblmontootro;
    private javax.swing.JLabel lblmontototal;
    private javax.swing.JLabel lblneto;
    private javax.swing.JLabel lblotro;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.panel.PanelCurves panelCurves2;
    private javax.swing.JTable tablamayo;
    private javax.swing.JTextField txtcant70;
    private javax.swing.JTextField txtcant75;
    private javax.swing.JTextField txtcantotro;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextArea txtcomentarios;
    private javax.swing.JTextField txtcomision;
    private javax.swing.JTextField txtdevueltos;
    private javax.swing.JTextField txtdui;
    private javax.swing.JTextField txtentregado;
    private javax.swing.JTextField txtpreciootro;
    private javax.swing.JTextField txtsalida;
    // End of variables declaration//GEN-END:variables
}
